@page "/client"
@using Microsoft.AspNetCore.SignalR.Client
@using Blazorball.Data
@inject NavigationManager NavigationManager

<div class="text-center">
    <div class="header">
        <div class="flex-container">
            <img src="/img/blazorball.svg" alt="Blazorball" class="w-100" />
        </div>
        <br />
    </div>

    <section class="flex-container join-cta @GamePINCSS">
        <input type="number" class="text-input" placeholder="Game PIN" @bind="gamePIN" />
        <button class="button g-red" @onclick="VerifyRoom">Continue</button>
    </section>

    <section class="flex-container join-cta @UserNameCSS">
        <input type="text" class="text-input" placeholder="Your Name" @bind="userName" />
        <button class="button g-red" @onclick="JoinRoom">Join</button>
    </section>

    <span>@Validation</span>
</div>

@code {
    string GamePINCSS;
    string UserNameCSS = "d-none";
    string Validation;

    int? gamePIN;
    string userName;

    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chatHub"))
            .Build();

        _hubConnection.On<bool>(Messages.VerifyRoom, (validated) =>
        {
            if (!validated) Validation = "Invalid room code!";
            else
            {
                GamePINCSS = "d-none";
                UserNameCSS = "";
            }
            StateHasChanged();
        });

        await _hubConnection.StartAsync();
    }

    Task VerifyRoom() =>
        _hubConnection.SendAsync(Messages.VerifyRoom, gamePIN);

    Task JoinRoom() =>
        _hubConnection.SendAsync(Messages.JoinRoom, gamePIN, userName);

    public bool IsConnected =>
        _hubConnection.State == HubConnectionState.Connected;
}